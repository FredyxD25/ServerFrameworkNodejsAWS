# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: fredyxd25
# "service" is the name of this project. This will also be added to your AWS resource names.
service: aws-lambda

custom:
  tableName: ProyectosTareas

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:GetItem
        - dynamodb:Scan
        - dynamodb:DeleteItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tableName}
        - arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.tableName}/index/GSI1

package:
  include:
    - node_modules/aws-sdk/**

functions: #Funciones de Lambda

#-------Funciones Usuario-----------------------------------------------------------

  # Obtener todos los usuarios
  getAllUsers:
    handler: src/logic/User/getAllUsers.getAllUsers
    events:
      - httpApi:
          path: /user
          method: get

  # Obtener un usuario por ID
  getUser:
    handler: src/logic/User/getUser.getUser
    events:
      - httpApi:
          path: /user/{userId}
          method: get

  # Crear un usuario
  postUser:
    handler: src/logic/User/postUser.postUser
    events:
      - httpApi:
          path: /user
          method: post
  
#----------Funciones Proyecto---------------------------------------------------

  #Obtener todos los proyectos
  getAllProjects:
    handler: src/logic/Projects/getAllProjects.getAllProjects
    events:
      - httpApi:
          path: /project
          method: get
  #Obtener un proyecto por ID
  getProject:
    handler: src/logic/Projects/getProject.getProject
    events:
      - httpApi:
          path: /project/{projectId}
          method: get
  #Crear un proyecto
  postProject:
    handler: src/logic/Projects/postProject.postProject
    events:
      - httpApi:
          path: /project
          method: post
  
#----------Funciones Tarea---------------------------------------------------
  #Asignar una proyecto a un usuario
  postGetTasksByProject:
    handler: src/logic/Task/postTasksByProject.postTasksByProject
    events:
      - httpApi:
          path: /taskproject
          method: post
  #Asignar una proyecto a un usuario
  postUserToProject:
    handler: src/logic/Task/postUserToProject.postUserToProject
    events:
      - httpApi:
          path: /task
          method: post

#------------Configuracion para DynamoDB-----------------------------------
resources: 
  Resources:
    ProjectSystemTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        BillingMode: PAY_PER_REQUEST  # Sin preocuparte por capacidad
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1PK
            AttributeType: S
          - AttributeName: GSI1SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1PK
                KeyType: HASH
              - AttributeName: GSI1SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL